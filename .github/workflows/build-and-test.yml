name: Build Next.js Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      PORT: 3000
      NODE_ENV: production
      AUTH_SECRET: ${{ secrets.AUTH_SECRET || 'github-action-secret-placeholder' }}
      AUTH_URL: ${{ secrets.AUTH_URL || 'http://localhost:3000' }}
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL || 'http://localhost:3000' }}
      NEXT_PUBLIC_IMAGE_DOMAIN: ${{ secrets.NEXT_PUBLIC_IMAGE_DOMAIN || 'img.ascencia.re' }}
      NEXT_PUBLIC_APP_DOMAIN: ${{ secrets.NEXT_PUBLIC_APP_DOMAIN || 'ascencia.re' }}
      TZ: Europe/Paris
      HOSTNAME: 0.0.0.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Create required directories
        run: |
          mkdir -p .next/static uploads uploads/thumbnails data config
          chmod 777 uploads uploads/thumbnails data config

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun --bun run build
        
      - name: Verify build output
        run: |
          if [ ! -d ".next/standalone" ] || [ ! -d ".next/static" ]; then
            echo "Build failed: standalone or static directories not found"
            exit 1
          fi
          echo "Build successful: standalone and static directories found"
          ls -la .next/standalone
          ls -la .next/static

      - name: Create cache directory
        run: mkdir -p .next/cache && chmod 777 .next/cache

      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
            .next/standalone
            .next/static
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}- 